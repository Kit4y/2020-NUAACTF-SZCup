
如果RSA已经难不倒你了，不如试一下椭圆曲线加密吧~
椭圆曲线E(a,b,p): y^2 = x^3+ax+b mod p
密码学中描述一条有限域上的椭圆曲线常用到六个参量：
T=(p,a,b,G,n,h)以及公钥和私钥
都放在p384-key.pem文件里面了（对，私钥也在）
PubKey = PrivKey*generator_384(G)
不过这个算法并不是【正规的椭圆曲线】，所以不要直接上网找脚本哦。这边给出这个椭圆曲线的加密方式:
x1 = int(codecs.encode(flag[:12],'hex'),16)
x2 = int(codecs.encode(flag[12:],'hex'),16)
X = (x1,x2)
k = randrange(1, n-1)
y0 = k*generator_384
KPoint = k*PubKey
Y = (X[0] * KPoint.x() % _p, X[1]*KPoint.y() % _p)

密文就是
Y=(34113256825339373520369275283701161541979556324226185535033938159804983053982282645600429717939710433082631730889659,32053109834346133043413144503065578404362769943246011698385086926019077101042898269877084920237885778463453847609171)
y0=(2133726374662399094674717622068093787945171315744414869137518727533960205385423874048257464199675228007664821044234,6814381752433500362278594762998419406730403502594534675593344187219595358988094395062831144664837476184888758539022)


