
如果RSA已经难不倒你了，不如试一下椭圆曲线加密吧~
椭圆曲线E(a,b,q): y^2 = x^3+ax+b mod q
密码学中描述一条有限域上的椭圆曲线常用到六个参量：
T=(p,a,b,G,n,h)以及公钥和私钥
都放在p384-key.pem文件里面了（对，私钥也在）
不过这个算法并不是【正规的椭圆曲线】，所以不要直接上网找脚本哦。这边给出这个椭圆曲线的加密方式:
x1 = int(codecs.encode(flag[:12],'hex'),16)
x2 = int(codecs.encode(flag[12:],'hex'),16)
X = (x1,x2)
k = randrange(1, n-1)
y0 = k*generator_384
KPoint = k*PubKey
Y = (X[0] * KPoint.x() % _p, X[1]*KPoint.y() % _p)

密文就是
Y=(24003781112879348220058803836033945042865485305464905467674393176615089477541954401077778512524464973048661625611766,28206975141069863747440019357792832391407275600645008495572799929028656654635919809015500539951381128059791451723260)
y0=(25972577012057310998482368542830747788006175098189596510234023630951675635795121449793787044812379072009990261128415,26404574880338157355180649551087036452335866504634102098567238931093015093862341056668365880979208280931190589546641)

Menezes-Vanstone